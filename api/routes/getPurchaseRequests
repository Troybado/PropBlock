var express = require("express");
require("dotenv").config();
var Moralis = require("../modules/moralis");
var config = require("../config");
var helper = require("../functions/Helper");

var router = express.Router();

//getting purchases requests for a seller
router.get("/getPurchaseRequests", async function (req, res, next) {
  const sessionToken = req.query.sessionToken;
  var ownerAddress = req.query.ownerAddress
  const mode = req.query.mode.toLowerCase();
  var isLoggedIn = await helper.isAuthenticated(sessionToken, ownerAddress)

  if (!isLoggedIn) {
    res.status(401);
    res.send("not authenticated")
    return;
  }

  if (mode === undefined
     || ownerAddress === undefined
     || ((mode != "seller" && mode != "buyer"))) {
    res.status(422).send("wrong input")
    return
  }

  ownerAddress = helper.toCheckSumAddress(ownerAddress)
  console.log("address: " + ownerAddress)
  const requestsQuery = new Moralis.Query("PurchaseRequest");
  if(mode == "seller") requestsQuery.equalTo("sellerEthAddress", ownerAddress);
  else requestsQuery.equalTo("requesterEthAddress", ownerAddress);
    // requestsQuery.equalTo("isPending", true)
    const requestResult = await requestsQuery.find();

    //because moralis object is very bad
    //so ill just treat it as a JSON
    const result = JSON.parse(JSON.stringify(requestResult))
    const data = [];

    for (let i = 0; i < result.length; i++) {
      var currentResult = result[i];

      data.push({
        key: currentResult.objectId,
        sellerAddress: currentResult.sellerEthAddress,
        requesterAddress: currentResult.requesterEthAddress,
        propertyID: currentResult.propertyObjectId,
        dateRequested: currentResult.createdAt,
        isPending: currentResult.isPending ?? true,
        isAccepted: currentResult.isAccepted ?? false,
        agreementStarted: currentResult.agreementStarted,
      });
    }

    res.send(data); 
    return
});

module.exports = router;
