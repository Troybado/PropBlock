var express = require("express");
require("dotenv").config();
var Moralis = require("../modules/moralis");
var config = require('../config');
var helper = require("../functions/Helper");

var router = express.Router();

//getting purchases requests for a seller
router.get("/getPurchaseRequests", async function(req, res, next) {

    const sessionToken = req.query.sessionToken;
    console.log("authenticating with: " + sessionToken);
    if (!helper.isAuthenticated(sessionToken)) {
        res.status(401);
        res.send("not authenticated!");
        return;
    }

    const ownerAddress = req.query.ownerAddress;
    if (ownerAddress) {
        //make local caching
        const requestsQuery = new Moralis.Query("PurchaseRequest");
        requestsQuery.equalTo("sellerEthAddress", ownerAddress);
        const result = await requestsQuery.find();
        const data = [];
        for (let i = 0; i < result.length; i++) {
            var requestorAddress = result[i].get("requesterEthAddress");
            var inCache = false;
            for (var j = 0; j < data.length; j++) {
                if (data[j]["address"] == requestorAddress) {
                    inCache = true;
                }
            }
            const user = await helper.getUser(requestorAddress);
            data.push( {
                ...user,
                isAccepted: result[i].get("isAccepted"),
                isBeingProcessed: result[i].get("isBeingProccessed") ?? true,
                createdAt: result[i].get("createdAt"),
                propertyObjectId: result[i].get("propertyObjectId")
            }); 
            
        }
        res.send(data);
        return;
    }
});

module.exports = router;